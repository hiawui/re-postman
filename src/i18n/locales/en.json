{
  "common": {
    "cancel": "Cancel",
    "delete": "Delete",
    "clear": "Clear",
    "type": "Type",
    "ok": "OK",
    "selectLanguage": "Select Language",
    "edit": "Edit"
  },
  "navigation": {
    "collections": "Collections",
    "environments": "Environments",
    "history": "History"
  },
  "request": {
    "body": "Body",
    "headers": "Headers",
    "requestName": "Request Name",
    "addToCollection": "Add to Collection",
    "saveToCollection": "Save to Collection",
    "save": "Save",
    "sending": "Sending...",
    "send": "Send",
    "params": "Params",
    "requestNameLabel": "Request Name:",
    "requestNamePlaceholder": "Please enter request name",
    "selectCollection": "Select Collection to add to:",
    "selectCollectionPlaceholder": "Please select Collection",
    "createCollectionFirst": "Please create a Collection first",
    "selectCollectionError": "Please select a Collection",
    "enterRequestNameError": "Please enter request name",
    "requestTitle": "Request",
    "urlParameters": "URL Parameters",
    "urlParameterKey": "URL Parameter Key",
    "requestBody": "Request Body",
    "bodyContent": "Content",
    "formatJson": "Format JSON",
    "enterJsonContent": "Enter JSON content...",
    "enterXmlContent": "Enter XML content...",
    "enterTextContent": "Enter TEXT content...",
    "key": "Key",
    "value": "Value",
    "text": "Text",
    "file": "File",
    "selectFile": "Select File",
    "header": "Header",
    "enterRequestUrl": "Enter request URL",
    "requestAddedToCollection": "Request added to Collection",
    "requestSavedToCollection": "Request saved to Collection"
  },
  "collections": {
    "newCollection": "New",
    "collectionName": "Collection Name",
    "noCollections": "No collections yet",
    "editCollection": "Edit Collection",
    "deleteCollectionConfirm": "Are you sure you want to delete this collection?",
    "deleteCollectionDescription": "This action cannot be undone, and all requests in the collection will also be deleted.",
    "editRequest": "Edit Request",
    "deleteRequestConfirm": "Are you sure you want to delete this request?",
    "editCollectionTooltip": "Edit Collection",
    "deleteCollectionTooltip": "Delete Collection",
    "editRequestTooltip": "Edit Request",
    "deleteRequestTooltip": "Delete Request",
    "requestNamePlaceholder": "e.g. Get User Info",
    "collectionNamePlaceholder": "e.g. API Test Collection",
    "exportCollections": "Export",
    "importCollections": "Import",
    "exportCollectionsTooltip": "Export all collections as JSON",
    "importCollectionsTooltip": "Import collections from JSON file",
    "exportSuccess": "Collections exported successfully",
    "exportError": "Failed to export collections",
    "importSuccess": "Collections imported successfully",
    "importError": "Failed to import collections",
    "fileReadError": "Failed to read file",
    "importMethod": "Import Method",
    "uploadFile": "Upload File",
    "orPasteJson": "or paste JSON data below",
    "importJsonData": "JSON Data",
    "importJsonDataPlaceholder": "Paste your collection JSON data here...",
    "exportCollectionsConfirm": "Are you sure you want to export all collections?",
    "exportCollectionsDescription": "This will export all your collections into a single JSON file."
  },
  "history": {
    "requestHistory": "Request History",
    "clearHistoryConfirm": "Clear History",
    "clearHistoryDescription": "Are you sure you want to clear all request history? This action cannot be undone.",
    "deleteHistoryItem": "Delete History Item",
    "deleteHistoryItemConfirm": "Are you sure you want to delete this history item?",
    "noRequestsYet": "No requests yet"
  },
  "methods": {
    "GET": "GET",
    "POST": "POST",
    "PUT": "PUT",
    "DELETE": "DELETE",
    "PATCH": "PATCH",
    "HEAD": "HEAD",
    "OPTIONS": "OPTIONS"
  },
  "bodyTypes": {
    "json": "JSON",
    "xml": "XML",
    "formData": "Form Data",
    "xWwwFormUrlencoded": "x-www-form-urlencoded",
    "raw": "Raw"
  },
  "errors": {
    "requiredField": "This field is required"
  },
  "environments": {
    "environmentManagement": "Environment Management",
    "manageVariables": "Manage variables for different environments",
    "enableEnvironment": "Enable: Click the 'Enable' button to apply the environment to requests. Later environments will override earlier ones.",
    "enabledEnvironments": "Enabled environments",
    "previewMergedVariables": "Preview merged variables",
    "hideMergedVariables": "Hide merged variables",
    "addEnvironment": "Add Environment",

    "environmentName": "Environment Name",
    "environmentNamePlaceholder": "e.g. Development Environment",
    "variableName": "Variable Name",
    "variableValue": "Variable Value",
    "addVariable": "Add Variable",

    "from": "From",
    "variableCount": "Variable Count",
    "actions": "Actions",
    "enabled": "Enabled",
    "enable": "Enable",
    "disable": "Disable",
    "variables": "variables",
    "mergedVariablesHeader": "Merged variables from enabled environments (sorted by enable order)",
    "unknown": "Unknown",
    "duplicateNameError": "Environment name already exists",
    "deleteEnvironmentConfirm": "Delete Environment",
    "deleteEnvironmentDescription": "Are you sure you want to delete this environment? This action cannot be undone."
  },
  "services": {
    "networkError": "Network Error",
    "environmentCreated": "Environment Created Successfully",
    "environmentDeleted": "Environment Deleted Successfully",
    "currentEnvironment": "Current Environment",

    "corsErrorExtension": "CORS Error: Chrome extension should not be restricted by CORS, please check manifest.json configuration",
    "corsErrorWeb": "CORS Error: Please ensure the server supports CORS or use HTTPS protocol",
    "crossOriginBlocked": "Cross-origin request blocked, please check network settings",
    "networkConnectionFailed": "Network connection failed, please check network settings",
    "operationFailed": "Operation failed, please try again later",
    "networkRequestFailed": "Network request failed, please check network connection",
    "requestTimeout": "Request timeout, please try again later",
    "requestCancelled": "Request cancelled",
    "unknownError": "An unknown error occurred"
  },
  "utils": {
    "standardHttpHeaders": "Standard HTTP Headers",
    "customHeaders": "Custom Headers",
    "accept": "Content types that the client can handle",
    "acceptCharset": "Character sets supported by the client",
    "acceptEncoding": "Encoding methods supported by the client",
    "acceptLanguage": "Languages supported by the client",
    "authorization": "Authentication information",
    "cacheControl": "Cache control directives",
    "connection": "Connection type",
    "contentLength": "Request body length",
    "contentMD5": "MD5 checksum of the request body",
    "contentType": "Media type of the request body",
    "cookie": "Cookies sent by the client",
    "date": "Date and time when the request was sent",
    "expect": "Expected server behavior by the client",
    "from": "Email address of the request sender",
    "host": "Target host and port of the request",
    "ifMatch": "Conditional request: entity tag match",
    "ifModifiedSince": "Conditional request: last modified time",
    "ifNoneMatch": "Conditional request: entity tag mismatch",
    "ifRange": "Conditional request: range request",
    "ifUnmodifiedSince": "Conditional request: unmodified time",
    "maxForwards": "Maximum number of forwards",
    "origin": "Origin of the request",
    "pragma": "Implementation-specific directives",
    "proxyAuthorization": "Proxy server authentication",
    "range": "Partial content of the request",
    "referer": "Source page of the request",
    "te": "Transfer encoding",
    "upgrade": "Protocol upgrade",
    "userAgent": "Client information",
    "via": "Proxy server information",
    "warning": "Warning information",
    "xRequestedWith": "AJAX request identifier",
    "xForwardedFor": "Client real IP",
    "xForwardedProto": "Client protocol",
    "xRealIP": "Real IP address",
    "xPoweredBy": "Server technology information",
    "xFrameOptions": "Clickjacking protection",
    "xContentTypeOptions": "MIME type sniffing protection",
    "xXSSProtection": "XSS protection",
    "xDownloadOptions": "Download options",
    "xPermittedCrossDomainPolicies": "Cross-domain policy",
    "xDnsPrefetchControl": "DNS prefetch control",
    "xUACompatible": "IE compatibility mode",
    "xApiKey": "API key",
    "xAuthToken": "Authentication token",
    "xCSRFToken": "CSRF token",
    "xRateLimitLimit": "Rate limit limit",
    "xRateLimitRemaining": "Remaining request count",
    "xRateLimitReset": "Rate limit reset time"
  },
  "store": {
    "newRequest": "New Request"
  },
  "response": {
    "response": "Response",
    "body": "Body",
    "headers": "Headers",
    "status": "Status",
    "time": "Time",
    "size": "Size",
    "view": "View",
    "preview": "Preview",
    "raw": "Raw",
    "copy": "Copy",
    "download": "Download",
    "downloadFileName": "response.txt",
    "htmlPreview": "HTML Preview",
    "bytes": "bytes",
    "milliseconds": "ms",
    "seconds": "s",
    "kilobytes": "KB",
    "megabytes": "MB"
  }
}
